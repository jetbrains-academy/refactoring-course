type: edu
custom_name: Extract magic constants and reduce methodâ€™s length
files:
- name: src/main/kotlin/jetbrains/refactoring/course/extracting/Task.kt
  visible: true
  placeholders:
  - offset: 0
    length: 1264
    placeholder_text: |-
      package jetbrains.refactoring.course.extracting
  
      import java.net.URI
      import java.nio.file.Files
      import java.nio.file.Paths
      import kotlin.io.path.createDirectories
      import kotlin.io.path.exists

      fun getGreyPictureOfKitten(width: Int, height: Int): String {
          val imageUrl = URI("http://placekitten.com/g/$width/$height").toURL()
          val outPath = Paths.get("ExtractingCode/ExtractMagicConstantsAndReduceMethodLength/src/main/resources/cats/grey_${width}_$height.png")
       
          val inputStream = imageUrl.openStream()
          if (!outPath.exists()) outPath.parent.createDirectories()
          inputStream.use {
              Files.copy(it, outPath)
          }
          return outPath.toString()
      }

      fun getPictureOfKitten(width: Int, height: Int): String {
          val imageUrl = URI("http://placekitten.com/$width/$height").toURL()
          val outPath = Paths.get("ExtractingCode/ExtractMagicConstantsAndReduceMethodLength/src/main/resources/cats/${width}_$height.png")
       
          val inputStream = imageUrl.openStream()
          if (!outPath.exists()) outPath.parent.createDirectories()
          inputStream.use {
              Files.copy(it, outPath)
          }
          return outPath.toString()
      }
  
      fun main() {
          println(getGreyPictureOfKitten(200, 300))
          println(getPictureOfKitten(200, 300))
      }

- name: test/Tests.kt
  visible: false
- name: src/main/resources/cats/grey_200_300.png
  visible: true
- name: src/main/resources/cats/200_300.png
  visible: true
